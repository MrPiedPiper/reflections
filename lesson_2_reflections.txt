What happens when you initialize a repository? Why do you need to do it?

It makes a new Git repository, but it doesn't make a commit. You have to tell it what files you're saving, and make the first commit yourself.


How is the staging area different from the working directory and the repository? What value do you think it offers?

It's the middle-man that manages what's backed up. It's valuable in that it can be set up, then saved. It's quite important.


How can you use the staging area to make sure you have one commit per logical change?

You can view what differences there are between the previous commit, the staging area, and the files you're working with. That way, you can see exactly what you're doing, and make sure you're commiting the right changes.


What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Say you wanted to experiment with a UI overhaul, but weren't sure it'd work out, and wanted a working version of your game. You could make a branch for the experimental UI, and still have the original working copy saved!
It's organized because you don't have to keep track of commits, and it'd help because it's convenient.


